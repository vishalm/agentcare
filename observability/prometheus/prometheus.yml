# Prometheus Configuration for AgentCare
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'agentcare'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Rules files
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # AgentCare Application Metrics
  - job_name: 'agentcare-api'
    static_configs:
      - targets: ['agentcare:3000']
    metrics_path: '/api/v1/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    scheme: http

  # AgentCare Health Check
  - job_name: 'agentcare-health'
    static_configs:
      - targets: ['agentcare:3000']
    metrics_path: '/health'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Node.js Application Metrics
  - job_name: 'agentcare-nodejs'
    static_configs:
      - targets: ['agentcare:3000']
    metrics_path: '/api/v1/metrics/nodejs'
    scrape_interval: 15s

  # Agent Performance Metrics
  - job_name: 'agentcare-agents'
    static_configs:
      - targets: ['agentcare:3000']
    metrics_path: '/api/v1/metrics/agents'
    scrape_interval: 10s
    honor_labels: true

  # Healthcare Workflow Metrics
  - job_name: 'agentcare-healthcare'
    static_configs:
      - targets: ['agentcare:3000']
    metrics_path: '/api/v1/metrics/healthcare'
    scrape_interval: 30s
    honor_labels: true

  # LLM/Ollama Metrics
  - job_name: 'ollama'
    static_configs:
      - targets: ['ollama:11434']
    metrics_path: '/api/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true

  # Redis Metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s

  # PostgreSQL Metrics (if enabled)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # cAdvisor (Container Metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 10s
    honor_labels: true

  # NGINX Metrics (if using reverse proxy)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 15s

  # Blackbox Exporter (External Monitoring)
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://agentcare:3000/health
        - http://ollama:11434/api/tags
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Kubernetes Metrics (if deployed on K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://thanos-receive:19291/api/v1/receive"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'agentcare_.*|ollama_.*|healthcare_.*'
        action: keep

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 50GB
    wal-compression: true 