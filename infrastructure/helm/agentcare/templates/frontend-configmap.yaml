apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-frontend-config
  labels:
    {{- include "agentcare.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>AgentCare - Healthcare Scheduling</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
                margin: 0;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 1200px;
                margin: 0 auto;
                background-color: white;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            h1 {
                color: #2c3e50;
                text-align: center;
            }
            .status {
                padding: 20px;
                margin: 20px 0;
                border-radius: 4px;
                background-color: #e8f5e9;
                border: 1px solid #c8e6c9;
            }
            .api-status {
                font-weight: bold;
                color: #2e7d32;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üè• AgentCare</h1>
            <div class="status">
                <p>Frontend Status: <span class="api-status">Running</span></p>
                <p>API Status: <span id="apiStatus" class="api-status">Checking...</span></p>
            </div>
        </div>
        <script>
            // Check API health
            fetch('/api/health')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('apiStatus').textContent = data.health === 'ok' ? 'Connected' : 'Error';
                })
                .catch(error => {
                    document.getElementById('apiStatus').textContent = 'Not Connected';
                    console.error('Error:', error);
                });
        </script>
    </body>
    </html>

  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass http://{{ .Release.Name }}:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    } 