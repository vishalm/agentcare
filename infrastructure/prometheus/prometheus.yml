# Prometheus Configuration for AgentCare Development
# Comprehensive monitoring setup for all services

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'agentcare-dev'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Load rules once and periodically evaluate them
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # AgentCare Backend API
  - job_name: 'agentcare-backend'
    static_configs:
      - targets: ['backend:9091']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ['prometheus']

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Elasticsearch
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    metrics_path: '/_prometheus/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Nginx (if enabled)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:80']
    metrics_path: '/metrics'
    scrape_interval: 15s

  # Ollama LLM Service
  - job_name: 'ollama'
    static_configs:
      - targets: ['ollama:11434']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Jaeger
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Logstash
  - job_name: 'logstash'
    static_configs:
      - targets: ['logstash:9600']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Kibana
  - job_name: 'kibana'
    static_configs:
      - targets: ['kibana:5601']
    metrics_path: '/api/status'
    scrape_interval: 30s

  # Docker containers metrics (if available)
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-host:9323']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Application-specific metrics with service discovery
  - job_name: 'agentcare-services'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        port: 9090
    relabel_configs:
      - source_labels: [__meta_docker_container_label_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_docker_container_label_prometheus_io_path]
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_docker_container_label_prometheus_io_port]
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - source_labels: [__meta_docker_container_name]
        target_label: instance
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: job

# Remote write configuration (for production)
# remote_write:
#   - url: "http://remote-prometheus:9090/api/v1/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB 